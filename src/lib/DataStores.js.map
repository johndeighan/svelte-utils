{
  "version": 3,
  "file": "DataStores.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\DataStores.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# DataStores.coffee\r\n\r\nimport pathlib from 'path'\r\nimport {writable, readable} from 'svelte/store'\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass, range, getOptions,\r\n\tisString, isHash, isFunction,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {fromTAML} from '@jdeighan/base-utils/taml'\r\nimport {\r\n\tslurp, barf, withExt, newerDestFileExists,\r\n\t} from '@jdeighan/base-utils/fs'\r\nimport {\r\n\tinBrowser, getLocalStore, setLocalStore,\r\n\t} from '@jdeighan/browser'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class WritableDataStore\r\n\r\n\tconstructor: (defValue=undef) ->\r\n\t\t@store = writable defValue\r\n\r\n\tsubscribe: (func) ->\r\n\t\treturn @store.subscribe(func)\r\n\r\n\tset: (value) ->\r\n\t\tassert defined(value), \"stored value must be defined\"\r\n\t\t@store.set(value)\r\n\t\treturn\r\n\r\n\tupdate: (func) ->\r\n\t\tassert isFunction(func), \"Not a function\"\r\n\t\t@store.update(func)\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class LocalStorageDataStore extends WritableDataStore\r\n\r\n\tconstructor: (@masterKey, defValue=undef, @debug=false) ->\r\n\r\n\t\t# --- CoffeeScript forces us to call super first\r\n\t\t#     so we can't get the localStorage value first\r\n\t\tsuper defValue\r\n\r\n\t\t# --- Check if this key exists in localStorage\r\n\t\tif inBrowser()\r\n\t\t\tstoredVal = getLocalStore @masterKey\r\n\t\telse\r\n\t\t\tstoredVal = defValue\r\n\r\n\t\tif @debug\r\n\t\t\tconsole.log \"1. getLocalStore #{@masterKey} = #{JSON.stringify(storedVal)}\"\r\n\t\tif defined(storedVal)\r\n\t\t\t@set storedVal\r\n\r\n\tset: (value) ->\r\n\t\tassert defined(value), \"set(): cannot set to undef\"\r\n\t\tsuper value\r\n\t\tif @debug\r\n\t\t\tconsole.log \"2. setLocalStore #{@masterKey} = #{JSON.stringify(value)}\"\r\n\t\tif inBrowser()\r\n\t\t\tsetLocalStore @masterKey, value\r\n\t\treturn\r\n\r\n\tupdate: (func) ->\r\n\t\tsuper func\r\n\t\tvalue = @store.get()\r\n\t\tif @debug\r\n\t\t\tconsole.log \"3. setLocalStore #{@masterKey} = #{JSON.stringify(value)}\"\r\n\t\tif inBrowser()\r\n\t\t\tsetLocalStore @masterKey, value\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class PropsDataStore extends LocalStorageDataStore\r\n\r\n\tconstructor: (masterKey, hDefaults=undef, debug=false) ->\r\n\t\tassert isHash(hDefaults), \"hPrefs must be a hash\"\r\n\t\tsuper masterKey, hDefaults, debug\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class PrefsDataStore extends PropsDataStore\r\n\r\n\tconstructor: (hDefaults, debug=false) ->\r\n\t\tsuper 'hPrefs', hDefaults, debug\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class ReadableDataStore\r\n\r\n\tconstructor: () ->\r\n\t\t@store = readable null, (set) ->\r\n\t\t\t@setter = set        # store the setter function\r\n\t\t\t@start()             # call your start() method\r\n\t\t\treturn () => @stop() # return function capable of stopping\r\n\r\n\tsubscribe: (callback) ->\r\n\t\treturn @store.subscribe(callback)\r\n\r\n\tstart: () ->\r\n\t\treturn\r\n\r\n\tstop: () ->\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DateTimeDataStore extends ReadableDataStore\r\n\r\n\tstart: () ->\r\n\t\t# --- We need to store this interval for use in stop() later\r\n\t\t@interval = setInterval(() ->\r\n\t\t\t@setter new Date()\r\n\t\t\t, 1000)\r\n\t\treturn\r\n\r\n\tstop: () ->\r\n\t\tclearInterval @interval\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class MousePosDataStore extends ReadableDataStore\r\n\r\n\tstart: () ->\r\n\t\t# --- We need to store this handler for use in stop() later\r\n\t\t@mouseMoveHandler = (e) ->\r\n\t\t\t@setter {\r\n\t\t\t\tx: e.clientX,\r\n\t\t\t\ty: e.clientY,\r\n\t\t\t\t}\r\n\t\tdocument.body.addEventListener('mousemove', @mouseMoveHandler)\r\n\t\treturn\r\n\r\n\tstop: () ->\r\n\t\tdocument.body.removeEventListener('mousemove', @mouseMoveHandler)\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class TAMLDataStore extends WritableDataStore\r\n\r\n\tconstructor: (str) ->\r\n\r\n\t\tsuper fromTAML(str)\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- Mainly for better understanding, I've implemented data stores\r\n#     without using svelte's readable or writable data stores\r\n\r\nexport class BaseDataStore\r\n\r\n\tconstructor: (@value=undef) ->\r\n\t\t@lSubscribers = []\r\n\r\n\tsubscribe: (cbFunc) ->\r\n\t\tcbFunc @value\r\n\t\t@lSubscribers.push cbFunc\r\n\t\treturn () ->\r\n\t\t\tindex = @lSubscribers.indexOf cbFunc\r\n\t\t\t@lSubscribers.splice index, 1\r\n\r\n\tset: (val) ->\r\n\t\t@value = val\r\n\t\treturn\r\n\r\n\tupdate: (func) ->\r\n\t\t@value = func(@value)\r\n\t\t@alertSubscribers()\r\n\t\treturn\r\n\r\n\talertSubscribers: () ->\r\n\t\tfor cbFunc in @lSubscribers\r\n\t\t\tcbFunc @value\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class ToDoDataStore extends BaseDataStore\r\n\r\n\tconstructor: () ->\r\n\t\tlToDos = []   # save local reference to make code easier to grok\r\n\t\tsuper lToDos\r\n\t\t@lToDos = lToDos   # can't do this before calling super\r\n\r\n\tset: (val) ->\r\n\t\tcroak \"Don't use set()\"\r\n\r\n\tupdate: (func) ->\r\n\t\tcroak \"Don't use update()\"\r\n\r\n\tfind: (name) ->\r\n\t\t# --- returns index\r\n\t\tfor index in range(@lToDos.length)\r\n\t\t\tif (@lToDos[index].text == name)\r\n\t\t\t\treturn index\r\n\t\treturn undef\r\n\r\n\tclear: () ->\r\n\t\t# --- Don't set a new array. That would break our reference\r\n\t\t@lToDos.splice 0, @lToDos.length\r\n\t\treturn\r\n\r\n\tadd: (name) ->\r\n\t\tassert notdefined(@find(name)), \"Todo #{name} already exists\"\r\n\t\t@lToDos.push {\r\n\t\t\ttext: name\r\n\t\t\tdone: false\r\n\t\t\t}\r\n\t\t@alertSubscribers()\r\n\t\treturn\r\n\r\n\tremove: (name) ->\r\n\t\tindex = @find(name)\r\n\t\t@lToDos.splice index, 1\r\n\t\t@alertSubscribers()\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n#         UTILITIES\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewTamlStr = (code, stub) =>\r\n\r\n\treturn \"\"\"\r\n\t\t\timport {TAMLDataStore} from '@jdeighan/starbucks/stores';\r\n\r\n\t\t\texport let #{stub} = new TAMLDataStore(`#{code}`);\r\n\t\t\t\"\"\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewTamlFile = (srcPath, destPath=undef, hOptions={}) =>\r\n\t# --- taml => js\r\n\t#     Valid Options:\r\n\t#        force\r\n\r\n\tif notdefined(destPath)\r\n\t\tdestPath = withExt(srcPath, '.js')\r\n\t{force} = getOptions(hOptions)\r\n\tif force || ! newerDestFileExists(srcPath, destPath)\r\n\t\thInfo = pathlib.parse(destPath)\r\n\t\tstub = hInfo.name\r\n\r\n\t\ttamlCode = slurp(srcPath)\r\n\t\tjsCode = brewTamlStr(tamlCode, stub)\r\n\t\tbarf jsCode, destPath\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n"
  ]
}