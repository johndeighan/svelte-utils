{
  "version": 3,
  "file": "LanguageTranslator.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\LanguageTranslator.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# LanguageTranslator.coffee\r\n\r\nimport fetch from 'node-fetch'\r\nimport {v4 as uuid} from 'uuid'\r\nimport * as dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert} from '@jdeighan/base-utils/exceptions'\r\nimport {dbgEnter, dbgReturn, dbg} from '@jdeighan/base-utils/debug'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class LanguageTranslator\r\n\r\n\tconstructor: () ->\r\n\r\n\t\t# --- { <from>: <to>: <str>: <translation, ... }\r\n\t\t@hCache = {}\r\n\r\n\t# ..........................................................\r\n\r\n\tgetFromCache: (str, from, to) ->\r\n\r\n\t\tdbgEnter 'getFromCache', str, from, to\r\n\t\tdbg 'cache', @hCache\r\n\r\n\t\tif defined(h = @hCache[from]) \\\r\n\t\t\t\t&& defined(h2 = h[to]) \\\r\n\t\t\t\t&& defined(result = h2[str])\r\n\t\t\tdbgReturn 'getFromCache', result\r\n\t\t\treturn result\r\n\t\telse\r\n\t\t\tdbgReturn 'getFromCache', undef\r\n\t\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tputIntoCache: (str, from, to, translated) ->\r\n\r\n\t\tdbgEnter 'putIntoCache', str, from, to, translated\r\n\t\tif ! @hCache.hasOwnProperty(from)\r\n\t\t\t@hCache[from] = {}\r\n\t\th = @hCache[from]\r\n\t\tif ! h.hasOwnProperty(to)\r\n\t\t\th[to] = {}\r\n\t\th = h[to]\r\n\t\tassert ! h.hasOwnProperty(str)\r\n\t\th[str] = translated\r\n\t\tdbgReturn 'putIntoCache'\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttranslate: (str, from, to) ->\r\n\r\n\t\tdbgEnter 'translate', str, from, to\r\n\t\tif translated = @getFromCache(str, from, to)\r\n\t\t\tdbg \"found previous translation\"\r\n\t\t\tdbgReturn 'translate', translated\r\n\t\t\treturn translated\r\n\t\ttranslated = await @translateStr(str, from, to)\r\n\t\t@putIntoCache str, from, to, translated\r\n\t\tdbgReturn 'translate', translated\r\n\t\treturn translated\r\n\r\n\t# ..........................................................\r\n\r\n\ttranslateStr: (str, from, to) ->\r\n\r\n\t\treturn str\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class MSTranslator extends LanguageTranslator\r\n\r\n\tconstructor: () ->\r\n\r\n\t\tsuper()\r\n\t\t@baseURL = process.env['TRANSLATE_URL']\r\n\t\t@key = process.env['TRANSLATE_KEY']\r\n\t\t@location = process.env['TRANSLATE_LOCATION']\r\n\r\n\t# ..........................................................\r\n\r\n\ttranslateStr: (str, from, to) ->\r\n\r\n\t\t# --- construct the URL\r\n\t\turl = new URL(@baseURL)\r\n\t\turl.searchParams.set('api-version', '3.0')\r\n\t\turl.searchParams.set('from', from)\r\n\t\turl.searchParams.set('to', to)\r\n\r\n\t\tbody = [{text: str}]\r\n\t\tresp = await fetch url, {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Ocp-Apim-Subscription-Key': @key,\r\n\t\t\t\t'Ocp-Apim-Subscription-Region': @location,\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t'X-ClientTraceId': uuid().toString()\r\n\t\t\t\t},\r\n\t\t\tbody: JSON.stringify(body)\r\n\t\t\t}\r\n\t\tdata = await resp.json()\r\n\t\treturn data[0].translations[0].text\r\n"
  ]
}