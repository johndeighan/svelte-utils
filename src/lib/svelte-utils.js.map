{
  "version": 3,
  "file": "svelte-utils.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\svelte-utils.coffee"
  ],
  "names": [],
  "mappings": "AAAqB;AAErB,OAAO,QAAP,MAAA;;AACA,OAAO,EAAP,MAAA;;AACA,OAAO,OAAP,MAAA;;AAEA,OAAA;EACC,QADD;EACW,OADX;EACoB,UADpB;EACgC,UADhC;EAC4C,OAD5C;CAAA,MAAA;;AAGA,OAAA;EAAQ,MAAR;EAAgB,KAAhB;CAAA,MAAA;;AACA,OAAA;EAAQ,GAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,MAAR;EAAgB,IAAhB;CAAA,MAAA;;AACA,OAAA;EACC,OADD;EACU,MADV;EACkB,KADlB;EACyB,KADzB;CAAA,MAAA,4BAZqB;;;;AAoBrB,OAAA,IAAO,mBAAA,GAAsB,CAAC,GAAD,CAAA,GAAA;AAE5B,SAAO,GACN,CAAC,OADK,CACG,KADH,EACU,MADV,CAEN,CAAC,OAFK,CAEG,KAFH,EAEU,MAFV,CAGN,CAAC,OAHK,CAGG,KAHH,EAGU,UAHV,CAIN,CAAC,OAJK,CAIG,KAJH,EAIU,UAJV,CAKN,CAAC,OALK,CAKG,KALH,EAKU,UALV;AAFqB,EApBR;;;;AAgCrB,OAAA,IAAO,aAAA,GAAgB,CAAC,GAAD,CAAA,GAAA;AAEtB,SAAO,GACN,CAAC,OADK,CACG,KADH,EACU,UADV,CAEN,CAAC,OAFK,CAEG,KAFH,EAEU,UAFV,CAGN,CAAC,OAHK,CAGG,KAHH,EAGU,UAHV;AAFe,EAhCF;;;;AA0CrB,OAAA,IAAO,kBAAA,GAAqB,CAAC,WAAS,CAAA,CAAV,CAAA,GAAA;AAE5B,MAAA,eAAA;;EACC,eAAA,GAAkB;IACjB,GAAA,EAAK,sBADY;IAEjB,IAAA,EAAM,mBAFW;IAGjB,IAAA,EAAM,WAHW;IAIjB,OAAA,EAAS,cAJQ;IAKjB,YAAA,EAAc,WALG;IAMjB,cAAA,EAAgB,qBANC;IAOjB,aAAA,EAAe,UAPE;IAQjB,OAAA,EAAS,OARQ;IASjB,gBAAA,EAAkB;EATD;EAWlB,QAAA,GAAW,UAAA,CAAW,QAAX,EAAqB,eAArB;AACX,SAAO;IACN,GAAA,EAAK,QAAQ,CAAC,GADR;IAEN,IAAA,EAAM,QAAQ,CAAC,IAFT;IAGN,IAAA,EAAM,QAAQ,CAAC,IAHT;IAIN,OAAA,EAAS,QAAQ,CAAC,OAJZ;IAKN,YAAA,EAAc,QAAQ,CAAC,YALjB;IAMN,cAAA,EAAgB,QAAQ,CAAC,cANnB;IAON,aAAA,EAAe,QAAQ,CAAC,aAPlB;IAQN,OAAA,EAAS,QAAQ,CAAC,OARZ;IASN,gBAAA,EAAkB,QAAQ,CAAC,gBATrB;IAUN,KAAA,EAAO;MACN,OAAA,EAAS,IADH;MAEN,SAAA,EAAW,IAFL;MAGN,YAAA,EAAc,IAHR;MAIN,QAAA,EAAU,IAJJ;MAKN,OAAA,EAAS,KALH;MAMN,MAAA,EAAQ;IANF,CAVD;IAkBN,KAAA,EAAO;MACN,OAAA,EAAS;QACR,gBAAA,EAAkB;MADV;IADH;EAlBD;AAfoB,EA1CP;;;AAoFrB,OAAA,IAAO,WAAA,GAAc,KAAA,CAAC,WAAS,CAAA,CAAV,CAAA,GAAA;AAErB,MAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,gBAAA,EAAA;EAAC,QAAA,GAAW,kBAAA,CAAmB,QAAnB;EACX,CAAA,CAAC,IAAD,EAAO,GAAP,EAAY,gBAAZ,CAAA,GAAgC,QAAhC;EAGA,IAAG,CAAE,KAAA,CAAM,IAAN,CAAL;IACC,KAAA,CAAM,IAAN,EADD;;EAGA,MAAA,CAAQ,OAAA,CAAQ,GAAR,CAAY,CAAC,WAAb,CAAA,CAAA,KAA8B,MAAtC,EAA+C,wBAA/C;EACA,CAAA,CAAC,MAAD,EAAS,KAAT,EAAgB,IAAhB,CAAA,GAAwB,CAAA,MAAM,QAAA,CAAS,GAAT,EAAc,QAAd,CAAN,CAAxB;EAEA,MAAM,CAAC,GAAP,CAAW,CAAC,KAAD,CAAA,GAAA;WAAW,IAAA,CAAK,KAAK,CAAC,QAAX,EAAqB,IAArB,EAA2B,KAAK,CAAC,IAAjC;EAAX,CAAX;EACA,KAAK,CAAC,GAAN,CAAU,CAAC,IAAD,CAAA,GAAA;WAAU,IAAA,CAAK,IAAI,CAAC,QAAV,EAAoB,IAApB,EAA0B,IAAI,CAAC,IAA/B;EAAV,CAAV;EACA,IAAA,CAAK,IAAI,CAAC,IAAL,CAAU,IAAV,CAAL,EAAsB,IAAtB,EAA4B,YAA5B;AACA,SAAO,MAAA,CAAO,IAAP,EAAa,gBAAb;AAfa,EApFA;;;AAuGrB,OAAA,IAAO,UAAA,GAAa,CAAC,IAAD,EAAO,IAAP,EAAa,QAAM,KAAnB,CAAA,GAAA;AAEpB,MAAA,QAAA,EAAA;EAAC,MAAA,CAAO,UAAA,CAAW,IAAX,CAAP,EAAyB,sCAAzB;EACA,EAAA,GAAK,IAAI,CAAC,KAAL,CAAW,IAAA,GAAO,IAAlB;EACL,IAAG,KAAH;IACC,GAAA,CAAI,CAAA,mBAAA,CAAA,CAAsB,EAAtB,CAAA,IAAA,CAAJ,EADD;;EAEA,QAAA,GAAW,WAAA,CAAY,IAAZ,EAAkB,EAAlB;AAEX,SAAO,QAAA,CAAA,CAAA;IACN,IAAG,KAAH;MACC,GAAA,CAAI,2BAAJ,EADD;;WAEA,aAAA,CAAc,QAAd;EAHM;AARY,EAvGC;;;AAsHrB,OAAA,IAAO,YAAA,GAAe,CAAC,MAAD,EAAS,OAAT,CAAA,GAAA;AAEtB,MAAA,IAAA,EAAA;EAAC,MAAA,CAAO,OAAA,CAAQ,MAAR,CAAP,EAAwB,uBAAxB;EACA,MAAA,CAAO,QAAA,CAAS,OAAT,CAAP,EAA0B,yBAA1B;EACA,IAAA,GAAO,MAAM,CAAC,SAAS,CAAC,OAAD;EACvB,MAAA,CAAO,UAAA,CAAW,IAAX,CAAP,EAAyB,yBAAzB;EACA,OAAA,GAAU,CAAA,GAAC,KAAD,CAAA,GAAA;AACT,WAAO,IAAA,CAAK,GAAA,KAAL;EADE;EAEV,MAAA,CAAO,UAAA,CAAW,OAAX,CAAP,EAA4B,2BAA5B;EACA,MAAM,CAAC,SAAS,CAAC,OAAD,CAAhB,GAA4B;AAC5B,SAAO;AAVc",
  "sourcesContent": [
    "# svelte-utils.coffee\r\n\r\nimport favicons from 'favicons'\r\nimport fs from 'fs/promises'\r\nimport pathLib from 'path'\r\n\r\nimport {\r\n\tisString, isClass, isFunction, getOptions, execCmd,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {LOG} from '@jdeighan/base-utils/log'\r\nimport {mkpath, barf} from '@jdeighan/base-utils/fs'\r\nimport {\r\n\tfileExt, isFile, isDir, mkDir,\r\n\t} from '@jdeighan/coffee-utils/fs'\r\n\r\n\r\n# ---------------------------------------------------------------------------\r\n#   svelteSourceCodeEsc - to display source code for a *.starbucks page\r\n\r\nexport svelteSourceCodeEsc = (str) =>\r\n\r\n\treturn str \\\r\n\t\t.replace(/\\</g, '&lt;') \\\r\n\t\t.replace(/\\>/g, '&gt;') \\\r\n\t\t.replace(/\\{/g, '&lbrace;') \\\r\n\t\t.replace(/\\}/g, '&rbrace;') \\\r\n\t\t.replace(/\\$/g, '&dollar;')\r\n\r\n# ---------------------------------------------------------------------------\r\n#   svelteHtmlEsc - after converting markdown\r\n\r\nexport svelteHtmlEsc = (str) =>\r\n\r\n\treturn str \\\r\n\t\t.replace(/\\{/g, '&lbrace;') \\\r\n\t\t.replace(/\\}/g, '&rbrace;') \\\r\n\t\t.replace(/\\$/g, '&dollar;')\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- export only to allow unit tests\r\n\r\nexport getManifestOptions = (hOptions={}) =>\r\n\r\n\t# --- These are defaults - all can be overridden\r\n\thDefaultOptions = {\r\n\t\tsrc: \"./static/favicon.svg\",\r\n\t\tdest: \"./static/favicons\",\r\n\t\tpath: \"/favicons\"\r\n\t\tappName: \"My Great App\"\r\n\t\tappShortName: \"Great App\"\r\n\t\tappDescription: \"A great application\"\r\n\t\tdeveloperName: 'John Doe'\r\n\t\tversion: '1.0.0'\r\n\t\tmanifestFileName: 'manifest.json'\r\n\t\t}\r\n\thOptions = getOptions(hOptions, hDefaultOptions)\r\n\treturn {\r\n\t\tsrc: hOptions.src\r\n\t\tdest: hOptions.dest\r\n\t\tpath: hOptions.path\r\n\t\tappName: hOptions.appName\r\n\t\tappShortName: hOptions.appShortName\r\n\t\tappDescription: hOptions.appDescription\r\n\t\tdeveloperName: hOptions.developerName\r\n\t\tversion: hOptions.version\r\n\t\tmanifestFileName: hOptions.manifestFileName\r\n\t\ticons: {\r\n\t\t\tandroid: true\r\n\t\t\tappleIcon: true\r\n\t\t\tappleStartup: true\r\n\t\t\tfavicons: true\r\n\t\t\twindows: false\r\n\t\t\tyandex: false\r\n\t\t\t}\r\n\t\tfiles: {\r\n\t\t\tandroid: {\r\n\t\t\t\tmanifestFileName: 'manifest.json'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport genManifest = (hOptions={}) =>\r\n\r\n\thOptions = getManifestOptions(hOptions)\r\n\t{dest, src, manifestFileName} = hOptions\r\n\r\n\t# --- Create destination folder if it doesn't exist\r\n\tif ! isDir dest\r\n\t\tmkdir dest\r\n\r\n\tassert (fileExt(src).toLowerCase() == '.svg'), \"Source not an SVG file\"\r\n\t{images, files, html} = await favicons(src, hOptions)\r\n\r\n\timages.map (image) => barf image.contents, dest, image.name\r\n\tfiles.map (file) => barf file.contents, dest, file.name\r\n\tbarf html.join(\"\\n\"), dest, 'icons.html'\r\n\treturn mkpath(dest, manifestFileName)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport onInterval = (func, secs, doLog=false) =>\r\n\r\n\tassert isFunction(func), \"onInterval(): 1st arg not a function\"\r\n\tms = Math.floor(1000 * secs)\r\n\tif doLog\r\n\t\tLOG \"calling func every #{ms} ms.\"\r\n\tinterval = setInterval(func, ms)\r\n\r\n\treturn () ->\r\n\t\tif doLog\r\n\t\t\tLOG \"destroying interval timer\"\r\n\t\tclearInterval interval\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport makeReactive = (aClass, aMethod) =>\r\n\r\n\tassert isClass(aClass), \"aClass is not a class\"\r\n\tassert isString(aMethod), \"aMethod is not a string\"\r\n\tfunc = aClass.prototype[aMethod]\r\n\tassert isFunction(func), \"aMethod is not a method\"\r\n\tnewfunc = (lArgs...) =>\r\n\t\treturn func(lArgs...)\r\n\tassert isFunction(newfunc), \"newfunc is not a function\"\r\n\taClass.prototype[aMethod] = newfunc\r\n\treturn undef\r\n"
  ]
}